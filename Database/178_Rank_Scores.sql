--Write a SQL query to rank scores.
--If there is a tie between two scores, both should have the same ranking.
--Note that after a tie, the next ranking number should be the next consecutive integer value.
--In other words, there should be no "holes" between ranks.
--
--+----+-------+
--| Id | Score |
--+----+-------+
--| 1  | 3.50  |
--| 2  | 3.65  |
--| 3  | 4.00  |
--| 4  | 3.85  |
--| 5  | 4.00  |
--| 6  | 3.65  |
--+----+-------+
--For example, given the above Scores table,
--your query should generate the following report (order by highest score):
--
--+-------+---------+
--| score | Rank    |
--+-------+---------+
--| 4.00  | 1       |
--| 4.00  | 1       |
--| 3.85  | 2       |
--| 3.65  | 3       |
--| 3.65  | 3       |
--| 3.50  | 4       |
--+-------+---------+
--Important Note: For MySQL solutions, to escape reserved words used as column names,
--you can use an apostrophe before and after the keyword. For example `Rank`.

--DENSE_RANK()  發生持續的編號 例如資料值 1,2,2,3 發生的編號將是1,2,2,3
-- 單純的選取所需欄位及欄位名藉由DENSE_RANK完成

select Score, DENSE_RANK() over (order by Score desc) as `Rank` from Scores
